// automatically generated by the FlatBuffers compiler, do not modify

#ifndef FLATBUFFERS_GENERATED_HELLO_HELLO_H_
#define FLATBUFFERS_GENERATED_HELLO_HELLO_H_

#include "flatbuffers/flatbuffers.h"

namespace hello {

struct Message;

struct Message FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  enum {
    VT_NAME = 4,
    VT_TEXT = 6
  };
  const flatbuffers::String *name() const { return GetPointer<const flatbuffers::String *>(VT_NAME); }
  const flatbuffers::String *text() const { return GetPointer<const flatbuffers::String *>(VT_TEXT); }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyField<flatbuffers::uoffset_t>(verifier, VT_NAME) &&
           verifier.Verify(name()) &&
           VerifyField<flatbuffers::uoffset_t>(verifier, VT_TEXT) &&
           verifier.Verify(text()) &&
           verifier.EndTable();
  }
};

struct MessageBuilder {
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_name(flatbuffers::Offset<flatbuffers::String> name) {
    fbb_.AddOffset(Message::VT_NAME, name);
  }
  void add_text(flatbuffers::Offset<flatbuffers::String> text) {
    fbb_.AddOffset(Message::VT_TEXT, text);
  }
  MessageBuilder(flatbuffers::FlatBufferBuilder &_fbb) : fbb_(_fbb) { start_ = fbb_.StartTable(); }
  MessageBuilder &operator=(const MessageBuilder &);
  flatbuffers::Offset<Message> Finish() {
    auto o = flatbuffers::Offset<Message>(fbb_.EndTable(start_, 2));
    return o;
  }
};

inline flatbuffers::Offset<Message> CreateMessage(flatbuffers::FlatBufferBuilder &_fbb,
    flatbuffers::Offset<flatbuffers::String> name = 0,
    flatbuffers::Offset<flatbuffers::String> text = 0) {
  MessageBuilder builder_(_fbb);
  builder_.add_text(text);
  builder_.add_name(name);
  return builder_.Finish();
}

inline flatbuffers::Offset<Message> CreateMessageDirect(flatbuffers::FlatBufferBuilder &_fbb,
    const char *name = nullptr,
    const char *text = nullptr) {
  return CreateMessage(_fbb, name ? _fbb.CreateString(name) : 0, text ? _fbb.CreateString(text) : 0);
}

}  // namespace hello

#endif  // FLATBUFFERS_GENERATED_HELLO_HELLO_H_
